{"version":3,"sources":["store/actionTypes.js","store/reducer/user.js","store/reducer/chat.js","store/reducer/index.js","store/index.js","store/actionCreator.js","views/register/index.js","views/login/index.js","components/Msg.js","views/chat/index.js","components/Btns.js","index.js"],"names":["REGISTER_SUCCESS","LOGIN_SUCCESS","ERROR","INIT_DATA","LOGIN_OUT","MSG_RECV","MSG_LIST","initState","redirectTo","nickname","msg","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","msgList","concat","toConsumableArray","combineReducers","user","chat","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","socket","io","errMsg","register","password","dispatch","axios","post","then","res","status","code","message","success","error","login","initData","get","obj","getMsgLIst","recvMsg","on","Register","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateToNextPassword","rule","value","callback","form","confirmDirty","validateFields","force","compareToFirstPassword","getFieldValue","handleConfirmBlur","e","target","setState","handleSubmit","console","log","preventDefault","validateFieldsAndScroll","err","values","handleRegister","getFieldDecorator","react_default","a","createElement","className","Redirect","to","es_form","onSubmit","Item","label","rules","required","input","validator","onBlur","es_button","htmlType","Component","create","connect","Login","handleLogin","prefix","icon","style","color","placeholder","Msg","time","t","Date","d","getDate","h","getHours","m","getMinutes","mark","info","content","formateTime","create_time","Chat","myRef","React","createRef","handleInit","handleRecv","handleGetList","handleScroll","_this2","map","v","i","components_Msg","key","ref","height","overflow","onChange","handleChange","onClick","bind","handleSend","current","scrollIntoView","emit","Btns","visible","confirmLoading","Cookies","remove","logoutSubmit","setTimeout","history","push","_this3","menu","es_menu","loginOut","location","pathname","dropdown","overlay","modal","title","okText","cancelText","onOk","handleOk","onCancel","handleCancel","withRouter","Header","Footer","Content","ReactDOM","render","es","BrowserRouter","layout","components_Btns","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.02c8ed75.chunk.js","sourcesContent":["// 注册\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\n\n// 登录\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n\n// 错误\nexport const ERROR = \"ERROR\";\n\n// 初始化获取数据\nexport const INIT_DATA = \"INIT_DATA\";\n\n// 退出登录\nexport const LOGIN_OUT = \"LOGIN_OUT\";\n\n// 接受消息\nexport const MSG_RECV = \"MSG_RECV\";\n\n// 接受消息列表\nexport const MSG_LIST = \"MSG_LIST\";\n","import {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  INIT_DATA,\n  LOGIN_OUT,\n  ERROR\n} from \"../actionTypes\";\n\nconst initState = {\n  redirectTo: \"\", // 路由跳转控制\n  nickname: \"\",\n  msg: \"\"\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return { ...state, ...action.data, redirectTo: \"/login\" };\n    case LOGIN_SUCCESS:\n      return { ...state, ...action.data, redirectTo: \"/chat\" };\n    case INIT_DATA:\n      return { ...state, ...action.data };\n    case LOGIN_OUT:\n      return { ...initState};\n    case ERROR:\n      return { ...state, msg: action.data };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { MSG_RECV, MSG_LIST } from \"../actionTypes\";\nconst initState = {\n  msgList: []\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case MSG_RECV:\n      return { ...state, msgList: [...state.msgList, action.data] };\n    case MSG_LIST:\n      return { ...state, msgList: [...action.data] };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import {combineReducers} from 'redux'\nimport user from './user'\nimport chat from './chat'\nexport default combineReducers({user,chat})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  INIT_DATA,\n  LOGIN_OUT,\n  MSG_RECV,\n  MSG_LIST,\n  ERROR\n} from \"./actionTypes\";\nimport { message } from \"antd\";\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:9000\");\n\nfunction getRegisterAction(obj) {\n  return { type: REGISTER_SUCCESS, data: obj };\n}\nfunction getLoginAction(obj) {\n  return { type: LOGIN_SUCCESS, data: obj };\n}\nfunction getLoadAction(obj) {\n  return { type: INIT_DATA, data: obj };\n}\nfunction msgRecv(obj) {\n  return { type: MSG_RECV, data: obj };\n}\nfunction msgList(obj) {\n  return { type: MSG_LIST, data: obj };\n}\nfunction errMsg(msg) {\n  return { type: ERROR, data: msg };\n}\n\n// 注册\nexport const register = data => {\n  const { nickname, password } = data;\n  return dispatch => {\n    axios.post(\"/user/register\", { nickname, password }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        message.success(\"注册成功\");\n        dispatch(getRegisterAction({ nickname }));\n      } else {\n        message.error(res.data.msg);\n        dispatch(errMsg(res.data.msg));\n      }\n    });\n  };\n};\n\n// 登录\nexport const login = data => {\n  const { nickname, password } = data;\n  return dispatch => {\n    axios.post(\"/user/login\", { nickname, password }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        message.success(\"登录成功\");\n        dispatch(getLoginAction({ nickname }));\n      } else {\n        message.error(res.data.msg);\n        dispatch(errMsg(res.data.msg));\n      }\n    });\n  };\n};\n\n// 退出登录\nexport const loginOut = () => {\n  return { type: LOGIN_OUT };\n};\n\n// 初始化获取用户数据\nexport const initData = () => {\n  return dispatch => {\n    axios.get(\"/user/info\").then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(getLoadAction(res.data.data));\n      }\n    });\n  };\n};\n\n// 获取消息列表\nexport const getMsgLIst = () => {\n  return dispatch => {\n    axios.get(\"/user/getmsglist\").then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(msgList(res.data.data));\n      }\n    });\n  };\n};\n\n// 发送消息\nexport const sendMsg = data => {\n  return dispatch => {\n    socket.emit(\"sendMsg\", data);\n  };\n};\n\n// 接受消息\nexport const recvMsg = () => {\n  return dispatch => {\n    socket.on(\"recvMsg\", data => {\n      dispatch(msgRecv(data));\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {register} from '../../store/actionCreator'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false\n    };\n  }\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"两次输入密码不一致!\");\n    } else {\n      callback();\n    }\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  handleSubmit = e => {\n    console.log('点击按钮')\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        this.props.handleRegister(values)\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"register-form-wrapper\">\n        {this.props.redirectTo?<Redirect to={this.props.redirectTo}/>:null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"用户名\">\n            {getFieldDecorator(\"nickname\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入用户名!\"\n                }\n              ]\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          <Form.Item label=\"密码\">\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入密码!\"\n                },\n                {\n                  validator: this.validateToNextPassword\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <Form.Item label=\"确认密码\">\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请确认密码!\"\n                },\n                {\n                  validator: this.compareToFirstPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              注册\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nRegister = Form.create({})(Register);\n\nconst mapStateToProps = (state)=>{\n    return {\n        redirectTo:state.user.redirectTo\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        handleRegister(values){\n            const {nickname,password} = values\n            dispatch(register({nickname,password}))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { login } from \"../../store/actionCreator\";\n\nclass Login extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        this.props.handleLogin(values);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"login-form-wrapper\">\n        {this.props.redirectTo ? <Redirect to={this.props.redirectTo} /> : null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item>\n            {getFieldDecorator(\"nickname\", {\n              rules: [\n                { required: true, message: \"Please input your username!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"用户名\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                { required: true, message: \"Please input your Password!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              登录\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLogin = Form.create({})(Login);\n\nconst mapStateToProps = state => {\n  return {\n    redirectTo: state.user.redirectTo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin(values) {\n      const { nickname, password } = values;\n      dispatch(login({ nickname, password }));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nclass Msg extends Component {\n  formateTime(time) {\n    let t = new Date(time);\n    let d = t.getDate();\n    let h = t.getHours() < 10 ? `0${t.getHours()}` : `${t.getHours()}`;\n    let m = t.getMinutes() < 10 ? `0${t.getMinutes()}` : `${t.getMinutes()}`;\n    return new Date().getDate() > d ? `昨天${h}:${m}` : `${h}:${m}`;\n  }\n  render() {\n    return (\n      <div\n        className={this.props.mark === \"self\" ? \"msg-item self\" : \"msg-item\"}\n      >\n        <span className=\"name\">{this.props.info.user}</span>\n        <span className=\"msg\">{this.props.info.content}</span>\n        <span className=\"time\">\n          {this.formateTime(this.props.info.create_time)}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Msg;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, Button } from \"antd\";\nimport {\n  initData,\n  sendMsg,\n  recvMsg,\n  getMsgLIst\n} from \"../../store/actionCreator\";\nimport Msg from \"../../components/Msg\";\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n    this.myRef = React.createRef();\n  }\n  componentDidMount() {\n    this.props.handleInit(); // 获取已登录用户信息\n    this.props.handleRecv(); // 获取用户消息\n    this.props.handleGetList(); // 获取消息列表\n  }\n\n  componentDidUpdate() {\n    this.handleScroll();\n  }\n\n  render() {\n    return (\n      <div className=\"chat-box\">\n        <div className=\"show\">\n          {this.props.msgList.map((v, i) => {\n            return v.user === this.props.nickname ? (\n              <Msg key={i} mark=\"self\" info={v} />\n            ) : (\n              <Msg key={i} mark=\"other\" info={v} />\n            );\n          })}\n          <div\n            className=\"end\"\n            ref={this.myRef}\n            style={{ height: 0, overflow: \"hidden\" }}\n          />\n        </div>\n        <div className=\"input\">\n          <Input\n            placeholder=\"来吐槽下吧～\"\n            value={this.state.content}\n            onChange={v => this.handleChange(v)}\n            onClick={this.handleScroll.bind(this)}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              this.setState({ content: \"\" });\n              this.props.handleSend(this.props.nickname, this.state.content);\n            }}\n          >\n            发送\n          </Button>\n        </div>\n      </div>\n    );\n  }\n  handleChange(v) {\n    this.setState({\n      content: v.target.value\n    });\n  }\n  handleScroll() {\n    this.myRef.current.scrollIntoView();\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    nickname: state.user.nickname,\n    msgList: state.chat.msgList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleInit() {\n      dispatch(initData());\n    },\n    handleSend(user, content) {\n      dispatch(sendMsg({ user, content }));\n    },\n    handleRecv() {\n      dispatch(recvMsg());\n    },\n    handleGetList() {\n      dispatch(getMsgLIst());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chat);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Menu, Dropdown, Icon, Modal, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { loginOut } from \"../store/actionCreator\";\nclass Btns extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n  // 点击退出登录\n  loginOut() {\n    this.setState({\n      visible: true,\n      confirmLoading: false\n    });\n  }\n  // 确认退出\n  handleOk() {\n    this.setState({\n      confirmLoading: true\n    });\n    Cookies.remove(\"userid\");\n    this.props.logoutSubmit();\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false\n      });\n      this.props.history.push('/login')\n    }, 2000);\n  }\n  // 取消\n  handleCancel() {\n    message.error(\"你己取消退出\");\n    this.setState({\n      visible: false\n    });\n  }\n  render() {\n    const menu = (\n      <Menu>\n        <Menu.Item>\n          <span onClick={() => this.loginOut()}>退出</span>\n        </Menu.Item>\n      </Menu>\n    );\n\n    console.log(\"BTns:\", this.props);\n    return (\n      <span className=\"btn\">\n        {this.props.location.pathname === \"/chat\" && this.props.nickname ? (\n          <Dropdown overlay={menu}>\n            <span>\n              {this.props.nickname} <Icon type=\"down\" />\n            </span>\n          </Dropdown>\n        ) : this.props.location.pathname === \"/login\" ? (\n          <span onClick={() => this.props.history.push(\"/register\")}>注册</span>\n        ) : (\n          <span onClick={() => this.props.history.push(\"/login\")}>登录</span>\n        )}\n\n        <Modal\n          title=\"提示\"\n          okText=\"确定\"\n          cancelText=\"取消\"\n          visible={this.state.visible}\n          onOk={this.handleOk.bind(this)}\n          confirmLoading={this.state.confirmLoading}\n          onCancel={this.handleCancel.bind(this)}\n        >\n          <p>确定退出登录吗？</p>\n        </Modal>\n      </span>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    nickname: state.user.nickname\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutSubmit() {\n      dispatch(loginOut());\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Btns)\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Register from \"./views/register\";\nimport Login from \"./views/login\";\nimport Chat from \"./views/chat\";\nimport \"./main.css\";\nimport { Layout } from \"antd\";\nimport Btns from \"./components/Btns\";\nconst { Header, Footer, Content } = Layout;\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <div>\n        <Layout>\n          <Header>\n            <div className=\"header-content\">\n              <span className=\"title\">瓶子的聊天室</span>\n              <Btns />\n            </div>\n          </Header>\n          <Content>\n            <Switch>\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/chat\" component={Chat} />\n\t\t\t  <Redirect to=\"/chat\"/>\n            </Switch>\n          </Content>\n          <Footer>作者：瓶子</Footer>\n        </Layout>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}