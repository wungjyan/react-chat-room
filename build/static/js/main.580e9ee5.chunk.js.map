{"version":3,"sources":["store/actionTypes.js","store/reducer/user.js","store/reducer/chat.js","store/reducer/index.js","store/index.js","store/actionCreator.js","views/register/index.js","views/login/index.js","components/Msg.js","views/chat/index.js","index.js"],"names":["REGISTER_SUCCESS","LOGIN_SUCCESS","ERROR","INIT_DATA","LOGIN_OUT","MSG_RECV","MSG_LIST","initState","redirectTo","nickname","msg","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","msgList","concat","toConsumableArray","combineReducers","user","chat","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","socket","io","errMsg","register","password","dispatch","axios","post","then","res","status","code","message","success","error","login","initData","get","obj","getMsgLIst","recvMsg","on","Register","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateToNextPassword","rule","value","callback","form","confirmDirty","validateFields","force","compareToFirstPassword","getFieldValue","handleConfirmBlur","e","target","setState","handleSubmit","console","log","preventDefault","validateFieldsAndScroll","err","values","handleRegister","getFieldDecorator","react_default","a","createElement","className","Redirect","to","es_form","onSubmit","Item","label","rules","required","input","validator","onBlur","es_button","htmlType","Component","create","connect","Login","handleLogin","prefix","icon","style","color","placeholder","Link","Msg","time","t","Date","d","getDate","h","getHours","m","getMinutes","mark","info","content","formateTime","create_time","Chat","showDrawer","visible","onClose","handleOut","Cookies","remove","showInput","logoutSubmit","submitSend","handleSend","showEm","switchEmoji","clickEmoji","val","innerHTML","myRef","React","createRef","isLogin","handleInit","handleRecv","handleGetList","handleScroll","_this2","onClick","bind","map","v","i","components_Msg","key","ref","height","overflow","display","split","item","idx","fontSize","marginLeft","onChange","handleChange","onPressEnter","history","push","drawer","title","placement","closable","divider","href","current","scrollIntoView","emit","ReactDOM","render","es","BrowserRouter","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.580e9ee5.chunk.js","sourcesContent":["// 注册\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\n\n// 登录\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n\n// 错误\nexport const ERROR = \"ERROR\";\n\n// 初始化获取数据\nexport const INIT_DATA = \"INIT_DATA\";\n\n// 退出登录\nexport const LOGIN_OUT = \"LOGIN_OUT\";\n\n// 接受消息\nexport const MSG_RECV = \"MSG_RECV\";\n\n// 接受消息列表\nexport const MSG_LIST = \"MSG_LIST\";\n","import {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  INIT_DATA,\n  LOGIN_OUT,\n  ERROR\n} from \"../actionTypes\";\n\nconst initState = {\n  redirectTo: \"\", // 路由跳转控制\n  nickname: \"\",\n  msg: \"\"\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return { ...state, ...action.data, redirectTo: \"/login\" };\n    case LOGIN_SUCCESS:\n      return { ...state, ...action.data, redirectTo: \"/chat\" };\n    case INIT_DATA:\n      return { ...state, ...action.data };\n    case LOGIN_OUT:\n      return { ...initState};\n    case ERROR:\n      return { ...state, msg: action.data };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { MSG_RECV, MSG_LIST } from \"../actionTypes\";\nconst initState = {\n  msgList: []\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case MSG_RECV:\n      return { msgList: [...state.msgList, action.data] };\n    case MSG_LIST:\n      return { msgList: [...action.data] };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import {combineReducers} from 'redux'\nimport user from './user'\nimport chat from './chat'\nexport default combineReducers({user,chat})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  INIT_DATA,\n  LOGIN_OUT,\n  MSG_RECV,\n  MSG_LIST,\n  ERROR\n} from \"./actionTypes\";\nimport { message } from \"antd\";\nimport io from \"socket.io-client\";\nconst socket = io(\"http://120.78.167.54:9000\");\n\nfunction getRegisterAction(obj) {\n  return { type: REGISTER_SUCCESS, data: obj };\n}\nfunction getLoginAction(obj) {\n  return { type: LOGIN_SUCCESS, data: obj };\n}\nfunction getLoadAction(obj) {\n  return { type: INIT_DATA, data: obj };\n}\nfunction msgRecv(obj) {\n  return { type: MSG_RECV, data: obj };\n}\nfunction msgList(obj) {\n  return { type: MSG_LIST, data: obj };\n}\nfunction errMsg(msg) {\n  return { type: ERROR, data: msg };\n}\n\n// 注册\nexport const register = data => {\n  const { nickname, password } = data;\n  return dispatch => {\n    axios.post(\"/user/register\", { nickname, password }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        message.success(\"注册成功\");\n        dispatch(getRegisterAction({ nickname }));\n      } else {\n        message.error(res.data.msg);\n        dispatch(errMsg(res.data.msg));\n      }\n    });\n  };\n};\n\n// 登录\nexport const login = data => {\n  const { nickname, password } = data;\n  return dispatch => {\n    axios.post(\"/user/login\", { nickname, password }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        message.success(\"登录成功\");\n        dispatch(getLoginAction({ nickname }));\n      } else {\n        message.error(res.data.msg);\n        dispatch(errMsg(res.data.msg));\n      }\n    });\n  };\n};\n\n// 退出登录\nexport const loginOut = () => {\n  return { type: LOGIN_OUT };\n};\n\n// 初始化获取用户数据\nexport const initData = () => {\n  return dispatch => {\n    axios.get(\"/user/info\").then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(getLoadAction(res.data.data));\n      }\n    });\n  };\n};\n\n// 获取消息列表\nexport const getMsgLIst = () => {\n  return dispatch => {\n    axios.get(\"/user/getmsglist\").then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(msgList(res.data.data));\n      }\n    });\n  };\n};\n\n// 发送消息\nexport const sendMsg = data => {\n  return dispatch => {\n    socket.emit(\"sendMsg\", data);\n  };\n};\n\n// 接受消息\nexport const recvMsg = () => {\n  return dispatch => {\n    socket.on(\"recvMsg\", data => {\n      dispatch(msgRecv(data));\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { register } from \"../../store/actionCreator\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false\n    };\n  }\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"两次输入密码不一致!\");\n    } else {\n      callback();\n    }\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  handleSubmit = e => {\n    console.log(\"点击按钮\");\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        //console.log(\"Received values of form: \", values);\n        this.props.handleRegister(values);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"register-form-wrapper\">\n        {this.props.redirectTo ? <Redirect to={this.props.redirectTo} /> : null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"用户名\">\n            {getFieldDecorator(\"nickname\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入用户名!\"\n                }\n              ]\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          <Form.Item label=\"密码\">\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入密码!\"\n                },\n                {\n                  validator: this.validateToNextPassword\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <Form.Item label=\"确认密码\">\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请确认密码!\"\n                },\n                {\n                  validator: this.compareToFirstPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              注册\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nRegister = Form.create({})(Register);\n\nconst mapStateToProps = state => {\n  return {\n    redirectTo: state.user.redirectTo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleRegister(values) {\n      const { nickname, password } = values;\n      dispatch(register({ nickname, password }));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { login } from \"../../store/actionCreator\";\n\nclass Login extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.handleLogin(values);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"login-form-wrapper\">\n        {this.props.redirectTo ? <Redirect to={this.props.redirectTo} /> : null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item>\n            {getFieldDecorator(\"nickname\", {\n              rules: [\n                { required: true, message: \"Please input your username!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"用户名\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                { required: true, message: \"Please input your Password!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              登录\n            </Button>\n            或 <Link to=\"/register\">注册</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLogin = Form.create({})(Login);\n\nconst mapStateToProps = state => {\n  return {\n    redirectTo: state.user.redirectTo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin(values) {\n      const { nickname, password } = values;\n      dispatch(login({ nickname, password }));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nclass Msg extends Component {\n  formateTime(time) {\n    let t = new Date(time);\n    let d = t.getDate();\n    let h = t.getHours() < 10 ? `0${t.getHours()}` : `${t.getHours()}`;\n    let m = t.getMinutes() < 10 ? `0${t.getMinutes()}` : `${t.getMinutes()}`;\n    return new Date().getDate() > d ? `昨天${h}:${m}` : `${h}:${m}`;\n  }\n  render() {\n    return (\n      <div\n        className={this.props.mark === \"self\" ? \"msg-item self\" : \"msg-item\"}\n      >\n        <span className=\"name\">{this.props.info.user}</span>\n        <span className=\"msg\">{this.props.info.content}</span>\n        <span className=\"time\">\n          {this.formateTime(this.props.info.create_time)}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Msg;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, Button, message, Icon, Drawer, Divider } from \"antd\";\nimport {\n  initData,\n  sendMsg,\n  recvMsg,\n  getMsgLIst,\n  loginOut\n} from \"../../store/actionCreator\";\nimport Msg from \"../../components/Msg\";\nimport Cookies from \"js-cookie\";\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      visible: false,\n      showInput: true,\n      showEm: false\n    };\n    this.myRef = React.createRef();\n    this.isLogin = Cookies.get(\"userid\") ? true : false;\n  }\n  componentDidMount() {\n    this.props.handleInit(); // 获取已登录用户信息\n    if (!this.props.msgList.length) {\n      this.props.handleRecv(); // 获取用户消息\n      this.props.handleGetList(); // 获取消息列表\n    }\n    this.setState({\n      showInput: this.isLogin ? true : false\n    });\n  }\n\n  componentDidUpdate() {\n    this.handleScroll();\n  }\n\n  // 打开抽屉\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  // 关闭抽屉\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  // 点击退出登录\n  handleOut = () => {\n    Cookies.remove(\"userid\");\n    this.setState({\n      showInput: false\n    });\n    this.props.logoutSubmit();\n    message.success(\"你已退出登录！\");\n  };\n\n  // 发送消息\n  submitSend = () => {\n    this.props.handleSend(this.props.nickname, this.state.content);\n    this.setState({ content: \"\", showEm: false });\n  };\n\n  // 控制表情显示隐藏\n  switchEmoji = () => {\n    this.setState({\n      showEm: !this.state.showEm\n    });\n  };\n\n  // 点击表情\n  clickEmoji = e => {\n    const val = this.state.content + e.target.innerHTML;\n    this.setState({\n      content: val\n    });\n  };\n\n  render() {\n    const emojis =\n      \"😃 😃 😀 😁 😂 🤣 😃 😄 😅 😆 😉 😊 😋 😎 😍 😘 😗 😙 😚 🙂 🤗 🤩 🤔 🤨 😐 😑 😶 🙄 😏 😣 😥 😮 🤐 😯 😪 😫 😴 😌 😛 😜 😝 🤤 😒 😓 😔 😕 🙃 🤑 😲 🙁 😖 😞 😟 😤 😢 😭 😦 😧 😨 😩 🤯 😬 😰 😱 😳 🤪 😵 😡 😠 🤬 😷 🤒 🤕 🤢 🤮 🤧 😇 🤠 🤡 🤥 🤫 🤭 🧐 🤓 😈 💪 👈 👉 👆 🖕 👇 🤞 🖖 🤘 🤙 🖐 👌 👍 👎 ✊ 👊 🤛 🤜 🤚 👋 \";\n    return (\n      <div>\n        <div className=\"chat-box\">\n          <div className=\"header\">\n            <span>瓶子的聊天室</span>\n            <Icon onClick={this.showDrawer.bind(this)} type=\"setting\" />\n          </div>\n          <div\n            className=\"content\"\n            onClick={() => this.setState({ showEm: false })}\n          >\n            {this.props.msgList.map((v, i) => {\n              return v.user === this.props.nickname ? (\n                <Msg key={i} mark=\"self\" info={v} />\n              ) : (\n                <Msg key={i} mark=\"other\" info={v} />\n              );\n            })}\n            <div\n              className=\"end\"\n              ref={this.myRef}\n              style={{ height: 0, overflow: \"hidden\" }}\n            />\n          </div>\n          <div className=\"footer\">\n            {this.state.showInput ? (\n              <div className=\"input\">\n                <div\n                  className=\"emoji-box\"\n                  style={{ display: this.state.showEm ? \"block\" : \"none\" }}\n                >\n                  <div className=\"emojis\">\n                    {emojis.split(\" \").map((item, idx) => (\n                      <span onClick={this.clickEmoji} key={idx}>\n                        {item}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <Icon\n                  type=\"smile\"\n                  style={{ fontSize: \"20px\", marginLeft: \"5px\" }}\n                  onClick={this.switchEmoji}\n                />\n                <Input\n                  placeholder=\"来吐槽吧～\"\n                  value={this.state.content}\n                  onChange={v => this.handleChange(v)}\n                  onClick={this.handleScroll.bind(this)}\n                  onPressEnter={this.submitSend}\n                />\n                <Button type=\"primary\" onClick={this.submitSend}>\n                  发送\n                </Button>\n              </div>\n            ) : (\n              <div className=\"go-login\">\n                <span onClick={() => this.props.history.push(\"/login\")}>\n                  登录\n                </span>\n                才可以聊天室\n              </div>\n            )}\n          </div>\n        </div>\n        <Drawer\n          title=\"\"\n          placement=\"right\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <div>\n            <span>当前用户：</span>\n            <span>{this.props.nickname ? this.props.nickname : \"未登录\"}</span>\n          </div>\n          <Divider />\n          <div className=\"drawer-row\">\n            <a href=\"https://github.com/wungjyan/react-chat-room\">源码地址</a>\n          </div>\n          {this.props.nickname ? (\n            <div className=\"drawer-row\" onClick={this.handleOut}>\n              退出登录\n            </div>\n          ) : null}\n        </Drawer>\n      </div>\n    );\n  }\n  handleChange(v) {\n    this.setState({\n      content: v.target.value\n    });\n  }\n  handleScroll() {\n    this.myRef.current.scrollIntoView();\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    nickname: state.user.nickname,\n    msgList: state.chat.msgList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleInit() {\n      console.log(\"执行init\");\n      dispatch(initData());\n    },\n    handleSend(user, content) {\n      console.log(\"执行Send\");\n      if (!content) {\n        message.error(\"不能发空消息！\");\n        return;\n      }\n      dispatch(sendMsg({ user, content }));\n    },\n    handleRecv() {\n      console.log(\"执行Recv\");\n      dispatch(recvMsg());\n    },\n    handleGetList() {\n      console.log(\"执行GETLIST\");\n      dispatch(getMsgLIst());\n    },\n    logoutSubmit() {\n      dispatch(loginOut());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chat);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Register from \"./views/register\";\nimport Login from \"./views/login\";\nimport Chat from \"./views/chat\";\nimport \"./main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <div className=\"main\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/chat\" component={Chat} />\n          <Redirect to=\"/chat\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}